use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[Block {
        name: "Pioc",
        extends: None,
        description: Some("PIOC registers."),
        items: &[
            BlockItem {
                name: "status",
                description: Some("SFR_STATUS_REG."),
                array: None,
                byte_offset: 0x3,
                inner: BlockItemInner::Register(Register {
                    access: Access::Read,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "indir_addr",
                description: Some("PIOC indirect address register."),
                array: None,
                byte_offset: 0x4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "tmr0_count",
                description: Some("PIOC timer0 count register."),
                array: None,
                byte_offset: 0x5,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "tmr0_ctrl",
                description: Some("PIOC timer0 control register."),
                array: None,
                byte_offset: 0x6,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("Tmr0Ctrl"),
                }),
            },
            BlockItem {
                name: "tmr0_init",
                description: Some("PIOC timer0 initial value register."),
                array: None,
                byte_offset: 0x7,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "bit_cycle",
                description: Some("PIOC bit cycle register."),
                array: None,
                byte_offset: 0x8,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("BitCycle"),
                }),
            },
            BlockItem {
                name: "indir_addr2",
                description: Some("PIOC indirect address register2."),
                array: None,
                byte_offset: 0x9,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "port_dir",
                description: Some("PIOC port direction register."),
                array: None,
                byte_offset: 0xa,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("PortDir"),
                }),
            },
            BlockItem {
                name: "port_io",
                description: Some("PIOC port input/output register."),
                array: None,
                byte_offset: 0xb,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("PortIo"),
                }),
            },
            BlockItem {
                name: "bit_config",
                description: Some("PIOC bit configuration register."),
                array: None,
                byte_offset: 0xc,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("BitConfig"),
                }),
            },
            BlockItem {
                name: "sys_cfg",
                description: Some("PIOC system configuration register."),
                array: None,
                byte_offset: 0x1c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: Some("SysCfg"),
                }),
            },
            BlockItem {
                name: "ctrl_rd",
                description: Some("PIOC control read register."),
                array: None,
                byte_offset: 0x1d,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "ctrl_wr",
                description: Some(
                    "PIOC control write register. SFR_CTRL_WR. master read-write, host read-only.",
                ),
                array: None,
                byte_offset: 0x1e,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "data_exch",
                description: Some("PIOC data exchange register."),
                array: None,
                byte_offset: 0x1f,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
            BlockItem {
                name: "data_reg",
                description: Some("PIOC data register%s."),
                array: Some(Array::Regular(RegularArray { len: 32, stride: 1 })),
                byte_offset: 0x20,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 8,
                    fieldset: None,
                }),
            },
        ],
    }],
    fieldsets: &[
        FieldSet {
            name: "BitConfig",
            extends: None,
            description: Some("PIOC bit configuration register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "cyc_cnt3",
                    description: Some("CYC_CNT3."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cyc_cnt4",
                    description: Some("CYC_CNT4."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cyc_cnt5",
                    description: Some("CYC_CNT5."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cyc_cnt6",
                    description: Some("CYC_CNT6."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cyc_tail",
                    description: Some("CYC_TAIL."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "in_edge",
                    description: Some("IN_EDGE, 引脚输入电平采样时点选择."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "code_mod",
                    description: Some("CODE_MOD, 编码位的调制方式."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tx_en",
                    description: Some("TX_EN, 编码位的发送使能."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "BitCycle",
            extends: None,
            description: Some("PIOC bit cycle register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "cycle",
                    description: Some("CYCLE."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 6,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tx_o0",
                    description: Some("TX_O0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "PortDir",
            extends: None,
            description: Some("PIOC port direction register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "dir0",
                    description: Some("DIR0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dir1",
                    description: Some("DIR1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pu0",
                    description: Some("PU0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pu1",
                    description: Some("PU1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mod0",
                    description: Some("MOD0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mod1",
                    description: Some("MOD1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mod2",
                    description: Some("MOD2."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mod3",
                    description: Some("MOD3."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "PortIo",
            extends: None,
            description: Some("PIOC port input/output register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "out0",
                    description: Some("OUT0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "out1",
                    description: Some("OUT1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xor0",
                    description: Some("XOR0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "xor1",
                    description: Some("XOR1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "in0",
                    description: Some("IN0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "in1",
                    description: Some("IN1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bit_rx_io",
                    description: Some("BIT_RX_IO."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "in_xor",
                    description: Some("IN_XOR."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "SysCfg",
            extends: None,
            description: Some("PIOC system configuration register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "clk_gate",
                    description: Some("CLK_GATE, eMCU CLK gate enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "reset",
                    description: Some("RESET."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "io_en0",
                    description: Some("IO_EN0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "io_en1",
                    description: Some("IO_EN1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cfg_user",
                    description: Some("CFG_USER, user defined."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "data_mw_sr",
                    description: Some("DATA_MW_SR, master wating slave eMCU to read."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "data_sw_mr",
                    description: Some("DATA_SW_MR, slave eMCU wating master to read."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "int_req",
                    description: Some("INT_REQ, int request."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Tmr0Ctrl",
            extends: None,
            description: Some("PIOC timer0 control register."),
            bit_size: 8,
            fields: &[
                Field {
                    name: "freq",
                    description: Some("FREQ."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "mode",
                    description: Some("MODE."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "out_en",
                    description: Some("OUT_EN."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "en",
                    description: Some("EN."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "en_level0",
                    description: Some("EN_LEVEL0."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "en_level1",
                    description: Some("EN_LEVEL1."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[],
};
