use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[Block {
        name: "Rcc",
        extends: None,
        description: Some("Reset and clock control."),
        items: &[
            BlockItem {
                name: "ctlr",
                description: Some("Clock control register."),
                array: None,
                byte_offset: 0x0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ctlr"),
                }),
            },
            BlockItem {
                name: "cfgr0",
                description: Some("Clock configuration register (RCC_CFGR0)."),
                array: None,
                byte_offset: 0x4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cfgr0"),
                }),
            },
            BlockItem {
                name: "apb2prstr",
                description: Some("APB2 peripheral reset register (RCC_APB2PRSTR)."),
                array: None,
                byte_offset: 0xc,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2prstr"),
                }),
            },
            BlockItem {
                name: "apb1prstr",
                description: Some("APB1 peripheral reset register (RCC_APB1PRSTR)."),
                array: None,
                byte_offset: 0x10,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1prstr"),
                }),
            },
            BlockItem {
                name: "ahbpcenr",
                description: Some("AHB Peripheral Clock enable register (RCC_AHBPCENR)."),
                array: None,
                byte_offset: 0x14,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahbpcenr"),
                }),
            },
            BlockItem {
                name: "apb2pcenr",
                description: Some("APB2 peripheral clock enable register (RCC_APB2PCENR)."),
                array: None,
                byte_offset: 0x18,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2pcenr"),
                }),
            },
            BlockItem {
                name: "apb1pcenr",
                description: Some("APB1 peripheral clock enable register (RCC_APB1PCENR)."),
                array: None,
                byte_offset: 0x1c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1pcenr"),
                }),
            },
            BlockItem {
                name: "rstsckr",
                description: Some("Control/status register (RCC_RSTSCKR)."),
                array: None,
                byte_offset: 0x24,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Rstsckr"),
                }),
            },
            BlockItem {
                name: "ahbrstr",
                description: Some("AHB reset register (RCC_APHBRSTR)."),
                array: None,
                byte_offset: 0x28,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahbrstr"),
                }),
            },
        ],
    }],
    fieldsets: &[
        FieldSet {
            name: "Ahbpcenr",
            extends: None,
            description: Some("AHB Peripheral Clock enable register (RCC_AHBPCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dma1en",
                    description: Some("DMA clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sramen",
                    description: Some("SRAM interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbfsen",
                    description: Some("USBFS clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbpd",
                    description: Some("USBPD clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahbrstr",
            extends: None,
            description: Some("AHB reset register (RCC_APHBRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "usbfsrst",
                    description: Some("USBFS reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "piocrst",
                    description: Some("PIOC reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbpdrst",
                    description: Some("USBPD reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1pcenr",
            extends: None,
            description: Some("APB1 peripheral clock enable register (RCC_APB1PCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2en",
                    description: Some("Timer 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3en",
                    description: Some("Timer 3 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgen",
                    description: Some("Window watchdog clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2en",
                    description: Some("USART 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3en",
                    description: Some("USART 3 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart4en",
                    description: Some("USART 4 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1en",
                    description: Some("I2C 1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwren",
                    description: Some("Power interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1prstr",
            extends: None,
            description: Some("APB1 peripheral reset register (RCC_APB1PRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rst",
                    description: Some("Timer 2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rst",
                    description: Some("Timer 3 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrst",
                    description: Some("Window watchdog reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2rst",
                    description: Some("USART 2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3rst",
                    description: Some("USART 3 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart4rst",
                    description: Some("USART 4 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rst",
                    description: Some("I2C1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrst",
                    description: Some("Power interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2pcenr",
            extends: None,
            description: Some("APB2 peripheral clock enable register (RCC_APB2PCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "afioen",
                    description: Some("Alternate function I/O clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopaen",
                    description: Some("I/O port A clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopben",
                    description: Some("I/O port B clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopcen",
                    description: Some("I/O port C clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1en",
                    description: Some("ADC1 interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim1en",
                    description: Some("TIM1 Timer clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1en",
                    description: Some("SPI 1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1en",
                    description: Some("USART1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2prstr",
            extends: None,
            description: Some("APB2 peripheral reset register (RCC_APB2PRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "afiorst",
                    description: Some("Alternate function I/O reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ioparst",
                    description: Some("IO port A reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopbrst",
                    description: Some("IO port B reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopcrst",
                    description: Some("IO port C reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1rst",
                    description: Some("ADC 1 interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim1rst",
                    description: Some("TIM1 timer reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rst",
                    description: Some("SPI 1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rst",
                    description: Some("USART1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cfgr0",
            extends: None,
            description: Some("Clock configuration register (RCC_CFGR0)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hpre",
                    description: Some("AHB prescaler."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Hpre"),
                },
                Field {
                    name: "mco",
                    description: Some("Microcontroller clock output."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Mco"),
                },
            ],
        },
        FieldSet {
            name: "Ctlr",
            extends: None,
            description: Some("Clock control register."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsion",
                    description: Some("Internal High Speed clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdy",
                    description: Some("Internal High Speed clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsitrim",
                    description: Some("Internal High Speed clock trimming."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsical",
                    description: Some("Internal High Speed clock Calibration."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 8,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Rstsckr",
            extends: None,
            description: Some("Control/status register (RCC_RSTSCKR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "rmvf",
                    description: Some("Remove reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "oparstf",
                    description: Some("OPA reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pinrstf",
                    description: Some("PIN reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "porrstf",
                    description: Some("POR/PDR reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sftrstf",
                    description: Some("Software reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iwdgrstf",
                    description: Some("Independent watchdog reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrstf",
                    description: Some("Window watchdog reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpwrrstf",
                    description: Some("Low-power reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[
        Enum {
            name: "Hpre",
            description: Some("AHB prescaler."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("SYSCLK not divided."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("SYSCLK divided by 2."),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some("SYSCLK divided by 3."),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("SYSCLK divided by 4."),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV5",
                    description: Some("SYSCLK divided by 5."),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV6",
                    description: Some("SYSCLK divided by 6."),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV7",
                    description: Some("SYSCLK divided by 7."),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("SYSCLK divided by 8."),
                    value: 7,
                },
                EnumVariant {
                    name: "DIV2_ALT",
                    description: Some("SYSCLK divided by 2."),
                    value: 8,
                },
                EnumVariant {
                    name: "DIV4_ALT",
                    description: Some("SYSCLK divided by 4."),
                    value: 9,
                },
                EnumVariant {
                    name: "DIV8_ALT",
                    description: Some("SYSCLK divided by 8."),
                    value: 10,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("SYSCLK divided by 16."),
                    value: 11,
                },
                EnumVariant {
                    name: "DIV32",
                    description: Some("SYSCLK divided by 32."),
                    value: 12,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some("SYSCLK divided by 64."),
                    value: 13,
                },
                EnumVariant {
                    name: "DIV128",
                    description: Some("SYSCLK divided by 128."),
                    value: 14,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some("SYSCLK divided by 256."),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Mco",
            description: Some("Microcontroller clock output."),
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "NOCLK",
                    description: Some("No clock output."),
                    value: 0,
                },
                EnumVariant {
                    name: "SYSCLK",
                    description: Some("SYSCLK selected."),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI selected."),
                    value: 5,
                },
            ],
        },
    ],
};
