use crate::metadata::ir::*;
pub(crate) static REGISTERS: IR = IR {
    blocks: &[Block {
        name: "Rcc",
        extends: None,
        description: Some("Reset and clock control."),
        items: &[
            BlockItem {
                name: "ctlr",
                description: Some("Clock control register."),
                array: None,
                byte_offset: 0x0,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ctlr"),
                }),
            },
            BlockItem {
                name: "cfgr0",
                description: Some("Clock configuration register (RCC_CFGR0)."),
                array: None,
                byte_offset: 0x4,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cfgr0"),
                }),
            },
            BlockItem {
                name: "intr",
                description: Some("Clock interrupt register (RCC_INTR)."),
                array: None,
                byte_offset: 0x8,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Intr"),
                }),
            },
            BlockItem {
                name: "apb2prstr",
                description: Some("APB2 peripheral reset register (RCC_APB2PRSTR)."),
                array: None,
                byte_offset: 0xc,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2prstr"),
                }),
            },
            BlockItem {
                name: "apb1prstr",
                description: Some("APB1 peripheral reset register (RCC_APB1PRSTR)."),
                array: None,
                byte_offset: 0x10,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1prstr"),
                }),
            },
            BlockItem {
                name: "ahbpcenr",
                description: Some("AHB Peripheral Clock enable register (RCC_AHBPCENR)."),
                array: None,
                byte_offset: 0x14,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahbpcenr"),
                }),
            },
            BlockItem {
                name: "apb2pcenr",
                description: Some("APB2 peripheral clock enable register (RCC_APB2PCENR)."),
                array: None,
                byte_offset: 0x18,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb2pcenr"),
                }),
            },
            BlockItem {
                name: "apb1pcenr",
                description: Some("APB1 peripheral clock enable register (RCC_APB1PCENR)."),
                array: None,
                byte_offset: 0x1c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Apb1pcenr"),
                }),
            },
            BlockItem {
                name: "bdctlr",
                description: Some("Backup domain control register (RCC_BDCTLR)."),
                array: None,
                byte_offset: 0x20,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Bdctlr"),
                }),
            },
            BlockItem {
                name: "rstsckr",
                description: Some("Control/status register (RCC_RSTSCKR)."),
                array: None,
                byte_offset: 0x24,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Rstsckr"),
                }),
            },
            BlockItem {
                name: "ahbrstr",
                description: Some("AHB reset register (RCC_APHBRSTR)."),
                array: None,
                byte_offset: 0x28,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Ahbrstr"),
                }),
            },
            BlockItem {
                name: "cfgr2",
                description: Some("Clock configuration register2 (RCC_CFGR2)."),
                array: None,
                byte_offset: 0x2c,
                inner: BlockItemInner::Register(Register {
                    access: Access::ReadWrite,
                    bit_size: 32,
                    fieldset: Some("Cfgr2"),
                }),
            },
        ],
    }],
    fieldsets: &[
        FieldSet {
            name: "Ahbpcenr",
            extends: None,
            description: Some("AHB Peripheral Clock enable register (RCC_AHBPCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "dma1en",
                    description: Some("DMA clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dma2en",
                    description: Some("DMA2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sramen",
                    description: Some("SRAM interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "flitfen",
                    description: Some("FLITF clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "crcen",
                    description: Some("CRC clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "fsmcen",
                    description: Some("FSMC clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "trng_en",
                    description: Some("TRNG clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sdioen",
                    description: Some("SDIO clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhsen",
                    description: Some("USBHS clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "otg_en",
                    description: Some("OTG clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dvp_en",
                    description: Some("DVP clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethmacen",
                    description: Some("Ethernet MAC clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethmactxen",
                    description: Some("Ethernet MAC TX clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethmacrxen",
                    description: Some("Ethernet MAC RX clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ahbrstr",
            extends: None,
            description: Some("AHB reset register (RCC_APHBRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "usbhsrst",
                    description: Some("USBHD reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dvprst",
                    description: Some("DVP reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ethmacrst",
                    description: Some("Ethernet MAC reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1pcenr",
            extends: None,
            description: Some("APB1 peripheral clock enable register (RCC_APB1PCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2en",
                    description: Some("Timer 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3en",
                    description: Some("Timer 3 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4en",
                    description: Some("Timer 4 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5en",
                    description: Some("Timer 5 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6en",
                    description: Some("Timer 6 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7en",
                    description: Some("Timer 7 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6en",
                    description: Some("USART 6 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart7en",
                    description: Some("USART 7 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart8en",
                    description: Some("USART 8 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgen",
                    description: Some("Window watchdog clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2en",
                    description: Some("SPI 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3en",
                    description: Some("SPI 3 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2en",
                    description: Some("USART 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3en",
                    description: Some("USART 3 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart4en",
                    description: Some("UART 4 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart5en",
                    description: Some("UART 5 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1en",
                    description: Some("I2C 1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2en",
                    description: Some("I2C 2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbden",
                    description: Some("USBD clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can1en",
                    description: Some("CAN1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can2en",
                    description: Some("CAN2 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkpen",
                    description: Some("Backup interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwren",
                    description: Some("Power interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dacen",
                    description: Some("DAC interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb1prstr",
            extends: None,
            description: Some("APB1 peripheral reset register (RCC_APB1PRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "tim2rst",
                    description: Some("Timer 2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim3rst",
                    description: Some("Timer 3 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim4rst",
                    description: Some("Timer 4 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim5rst",
                    description: Some("Timer 5 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim6rst",
                    description: Some("Timer 6 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim7rst",
                    description: Some("Timer 7 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart6rst",
                    description: Some("UART 6 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart7rst",
                    description: Some("UART 7 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart8rst",
                    description: Some("UART 8 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrst",
                    description: Some("Window watchdog reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi2rst",
                    description: Some("SPI2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi3rst",
                    description: Some("SPI3 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart2rst",
                    description: Some("USART 2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart3rst",
                    description: Some("USART 3 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart4rst",
                    description: Some("USART 4 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart5rst",
                    description: Some("USART 5 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c1rst",
                    description: Some("I2C1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2c2rst",
                    description: Some("I2C2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbdrst",
                    description: Some("USBD reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can1rst",
                    description: Some("CAN1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "can2rst",
                    description: Some("CAN2 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bkprst",
                    description: Some("Backup interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pwrrst",
                    description: Some("Power interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "dacrst",
                    description: Some("DAC interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2pcenr",
            extends: None,
            description: Some("APB2 peripheral clock enable register (RCC_APB2PCENR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "afioen",
                    description: Some("Alternate function I/O clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopaen",
                    description: Some("I/O port A clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopben",
                    description: Some("I/O port B clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopcen",
                    description: Some("I/O port C clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopden",
                    description: Some("I/O port D clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopeen",
                    description: Some("I/O port E clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1en",
                    description: Some("ADC1 interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc2en",
                    description: Some("ADC 2 interface clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim1en",
                    description: Some("TIM1 Timer clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1en",
                    description: Some("SPI 1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8en",
                    description: Some("TIM8 Timer clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1en",
                    description: Some("USART1 clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9en",
                    description: Some("TIM9 Timer clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10en",
                    description: Some("TIM10 Timer clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Apb2prstr",
            extends: None,
            description: Some("APB2 peripheral reset register (RCC_APB2PRSTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "afiorst",
                    description: Some("Alternate function I/O reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ioparst",
                    description: Some("IO port A reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopbrst",
                    description: Some("IO port B reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopcrst",
                    description: Some("IO port C reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iopdrst",
                    description: Some("IO port D reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "ioperst",
                    description: Some("IO port E reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc1rst",
                    description: Some("ADC 1 interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "adc2rst",
                    description: Some("ADC 2 interface reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim1rst",
                    description: Some("TIM1 timer reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "spi1rst",
                    description: Some("SPI 1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim8rst",
                    description: Some("TIM8 timer reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usart1rst",
                    description: Some("USART1 reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim9rst",
                    description: Some("TIM9 timer reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "tim10rst",
                    description: Some("TIM10 timer reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Bdctlr",
            extends: None,
            description: Some("Backup domain control register (RCC_BDCTLR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lseon",
                    description: Some("External Low Speed oscillator enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdy",
                    description: Some("External Low Speed oscillator ready."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsebyp",
                    description: Some("External Low Speed oscillator bypass."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rtcsel",
                    description: Some("RTC clock source selection."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Rtcsel"),
                },
                Field {
                    name: "rtcen",
                    description: Some("RTC clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 15 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "bdrst",
                    description: Some("Backup domain software reset."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cfgr0",
            extends: None,
            description: Some("Clock configuration register (RCC_CFGR0)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "sw",
                    description: Some("System clock Switch."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Sw"),
                },
                Field {
                    name: "sws",
                    description: Some("System Clock Switch Status."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Sw"),
                },
                Field {
                    name: "hpre",
                    description: Some("AHB prescaler."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Hpre"),
                },
                Field {
                    name: "ppre1",
                    description: Some("APB Low speed prescaler (APB1)."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Ppre"),
                },
                Field {
                    name: "ppre2",
                    description: Some("APB High speed prescaler (APB2)."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 3,
                    array: None,
                    enumm: Some("Ppre"),
                },
                Field {
                    name: "adcpre",
                    description: Some("ADC prescaler."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Adcpre"),
                },
                Field {
                    name: "pllsrc",
                    description: Some("PLL entry clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllxtpre",
                    description: Some("HSE divider for PLL entry."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllmul",
                    description: Some("PLL Multiplication Factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("PllMul"),
                },
                Field {
                    name: "usbpre",
                    description: Some("USB prescaler."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 2,
                    array: None,
                    enumm: Some("Usbpre"),
                },
                Field {
                    name: "mco",
                    description: Some("Microcontroller clock output."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Mco"),
                },
                Field {
                    name: "adc_clk_adj",
                    description: Some("ADC clock ADJ."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Cfgr2",
            extends: None,
            description: Some("Clock configuration register2 (RCC_CFGR2)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "prediv1",
                    description: Some("PREDIV1 division factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Prediv"),
                },
                Field {
                    name: "prediv2",
                    description: Some("PREDIV2 division factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("Prediv"),
                },
                Field {
                    name: "pll2mul",
                    description: Some("PLL2 Multiplication Factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("PllxMul"),
                },
                Field {
                    name: "pll3mul",
                    description: Some("PLL3 Multiplication Factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 4,
                    array: None,
                    enumm: Some("PllxMul"),
                },
                Field {
                    name: "prediv1src",
                    description: Some("PREDIV1 entry clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2s2src",
                    description: Some("I2S2 clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "i2s3src",
                    description: Some("I2S3 clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "trng_src",
                    description: Some("TRNG clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1g_src",
                    description: Some("ETH1G clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 2,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "eth1g_125m_en",
                    description: Some("ETH1G _125M clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhs_prediy",
                    description: Some("USB HS PREDIV division factor."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 3,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhs_pll_src",
                    description: Some("USB HS Multiplication Factor clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhs_ckpef_sel",
                    description: Some("USB HS Peference Clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 2,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhs_pllalive",
                    description: Some("USB HS Multiplication control."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "usbhs_clk_src",
                    description: Some("USB HS clock source."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Ctlr",
            extends: None,
            description: Some("Clock control register."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "hsion",
                    description: Some("Internal High Speed clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdy",
                    description: Some("Internal High Speed clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsitrim",
                    description: Some("Internal High Speed clock trimming."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 5,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsical",
                    description: Some("Internal High Speed clock Calibration."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 8,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hseon",
                    description: Some("External High Speed clock enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdy",
                    description: Some("External High Speed clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsebyp",
                    description: Some("External High Speed clock Bypass."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "csson",
                    description: Some("Clock Security System enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllon",
                    description: Some("PLL enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdy",
                    description: Some("PLL clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 25 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll2on",
                    description: Some("PLL2 enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll2rdy",
                    description: Some("PLL2 clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll3on",
                    description: Some("PLL3 enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll3rdy",
                    description: Some("PLL3 clock ready flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Intr",
            extends: None,
            description: Some("Clock interrupt register (RCC_INTR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsirdyf",
                    description: Some("LSI Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyf",
                    description: Some("LSE Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyf",
                    description: Some("HSI Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 2 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyf",
                    description: Some("HSE Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 3 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyf",
                    description: Some("PLL Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 4 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll2rdyf",
                    description: Some("PLL2 Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 5 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll3rdyf",
                    description: Some("PLL3 Ready Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 6 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cssf",
                    description: Some("Clock Security System Interrupt flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 7 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdyie",
                    description: Some("LSI Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 8 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyie",
                    description: Some("LSE Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 9 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyie",
                    description: Some("HSI Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 10 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyie",
                    description: Some("HSE Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 11 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyie",
                    description: Some("PLL Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 12 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll2rdyie",
                    description: Some("PLL2 Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 13 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll3rdyie",
                    description: Some("PLL3 Ready Interrupt Enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 14 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdyc",
                    description: Some("LSI Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 16 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lserdyc",
                    description: Some("LSE Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 17 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hsirdyc",
                    description: Some("HSI Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 18 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "hserdyc",
                    description: Some("HSE Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 19 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pllrdyc",
                    description: Some("PLL Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 20 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll2rdyc",
                    description: Some("PLL2 Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 21 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pll3rdyc",
                    description: Some("PLL3 Ready Interrupt Clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 22 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "cssc",
                    description: Some("Clock security system interrupt clear."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 23 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
        FieldSet {
            name: "Rstsckr",
            extends: None,
            description: Some("Control/status register (RCC_RSTSCKR)."),
            bit_size: 32,
            fields: &[
                Field {
                    name: "lsion",
                    description: Some("Internal low speed oscillator enable."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 0 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lsirdy",
                    description: Some("Internal low speed oscillator ready."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 1 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "rmvf",
                    description: Some("Remove reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 24 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "pinrstf",
                    description: Some("PIN reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 26 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "porrstf",
                    description: Some("POR/PDR reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 27 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "sftrstf",
                    description: Some("Software reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 28 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "iwdgrstf",
                    description: Some("Independent watchdog reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 29 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "wwdgrstf",
                    description: Some("Window watchdog reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 30 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
                Field {
                    name: "lpwrrstf",
                    description: Some("Low-power reset flag."),
                    bit_offset: BitOffset::Regular(RegularBitOffset { offset: 31 }),
                    bit_size: 1,
                    array: None,
                    enumm: None,
                },
            ],
        },
    ],
    enums: &[
        Enum {
            name: "Adcpre",
            description: Some("ADC prescaler."),
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DIV2",
                    description: Some("PCLK2 divided by 2."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("PCLK2 divided by 4."),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV6",
                    description: Some("PCLK2 divided by 6."),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("PCLK2 divided by 8."),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Hpre",
            description: Some("AHB prescaler."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("SYSCLK not divided."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("SYSCLK divided by 2."),
                    value: 8,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("SYSCLK divided by 4."),
                    value: 9,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("SYSCLK divided by 8."),
                    value: 10,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("SYSCLK divided by 16."),
                    value: 11,
                },
                EnumVariant {
                    name: "DIV64",
                    description: Some("SYSCLK divided by 64."),
                    value: 12,
                },
                EnumVariant {
                    name: "DIV128",
                    description: Some("SYSCLK divided by 128."),
                    value: 13,
                },
                EnumVariant {
                    name: "DIV256",
                    description: Some("SYSCLK divided by 256."),
                    value: 14,
                },
                EnumVariant {
                    name: "DIV512",
                    description: Some("SYSCLK divided by 512."),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Mco",
            description: Some("Microcontroller clock output."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "NO_CLK",
                    description: Some("No clock."),
                    value: 0,
                },
                EnumVariant {
                    name: "SYSCLK",
                    description: Some("SYSCLK selected."),
                    value: 4,
                },
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI selected."),
                    value: 5,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE selected."),
                    value: 6,
                },
                EnumVariant {
                    name: "PLL_DIV2",
                    description: Some("PLL clock divided by 2."),
                    value: 7,
                },
                EnumVariant {
                    name: "PLL2",
                    description: Some("PLL2 clock selected."),
                    value: 8,
                },
                EnumVariant {
                    name: "PLL3_DIV2",
                    description: Some("PLL3 clock divided by 2."),
                    value: 9,
                },
                EnumVariant {
                    name: "XT1",
                    description: Some("XT1 selected."),
                    value: 10,
                },
                EnumVariant {
                    name: "PLL3",
                    description: Some("PLL3 clock selected."),
                    value: 11,
                },
            ],
        },
        Enum {
            name: "PllMul",
            description: Some("PLL Multiplication Factor."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "MUL2",
                    description: Some("PLL input clock x 2."),
                    value: 0,
                },
                EnumVariant {
                    name: "MUL3",
                    description: Some("PLL input clock x 3."),
                    value: 1,
                },
                EnumVariant {
                    name: "MUL4",
                    description: Some("PLL input clock x 4."),
                    value: 2,
                },
                EnumVariant {
                    name: "MUL5",
                    description: Some("PLL input clock x 5."),
                    value: 3,
                },
                EnumVariant {
                    name: "MUL6",
                    description: Some("PLL input clock x 6."),
                    value: 4,
                },
                EnumVariant {
                    name: "MUL7",
                    description: Some("PLL input clock x 7."),
                    value: 5,
                },
                EnumVariant {
                    name: "MUL8",
                    description: Some("PLL input clock x 8."),
                    value: 6,
                },
                EnumVariant {
                    name: "MUL9",
                    description: Some("PLL input clock x 9."),
                    value: 7,
                },
                EnumVariant {
                    name: "MUL10",
                    description: Some("PLL input clock x 10."),
                    value: 8,
                },
                EnumVariant {
                    name: "MUL11",
                    description: Some("PLL input clock x 11."),
                    value: 9,
                },
                EnumVariant {
                    name: "MUL12",
                    description: Some("PLL input clock x 12."),
                    value: 10,
                },
                EnumVariant {
                    name: "MUL13",
                    description: Some("PLL input clock x 13."),
                    value: 11,
                },
                EnumVariant {
                    name: "MUL14",
                    description: Some("PLL input clock x 14."),
                    value: 12,
                },
                EnumVariant {
                    name: "MUL15",
                    description: Some("PLL input clock x 15."),
                    value: 13,
                },
                EnumVariant {
                    name: "MUL16",
                    description: Some("PLL input clock x 16."),
                    value: 14,
                },
                EnumVariant {
                    name: "MUL18",
                    description: Some("PLL input clock x 18."),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "PllxMul",
            description: Some("PLL2, PLL3 Multiplication Factor."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "MUL2_5",
                    description: Some("PLL input clock x 2.5."),
                    value: 0,
                },
                EnumVariant {
                    name: "MUL12_5",
                    description: Some("PLL input clock x 12.5."),
                    value: 1,
                },
                EnumVariant {
                    name: "MUL4",
                    description: Some("PLL input clock x 4."),
                    value: 2,
                },
                EnumVariant {
                    name: "MUL5",
                    description: Some("PLL input clock x 5."),
                    value: 3,
                },
                EnumVariant {
                    name: "MUL6",
                    description: Some("PLL input clock x 6."),
                    value: 4,
                },
                EnumVariant {
                    name: "MUL7",
                    description: Some("PLL input clock x 7."),
                    value: 5,
                },
                EnumVariant {
                    name: "MUL8",
                    description: Some("PLL input clock x 8."),
                    value: 6,
                },
                EnumVariant {
                    name: "MUL9",
                    description: Some("PLL input clock x 9."),
                    value: 7,
                },
                EnumVariant {
                    name: "MUL10",
                    description: Some("PLL input clock x 10."),
                    value: 8,
                },
                EnumVariant {
                    name: "MUL11",
                    description: Some("PLL input clock x 11."),
                    value: 9,
                },
                EnumVariant {
                    name: "MUL12",
                    description: Some("PLL input clock x 12."),
                    value: 10,
                },
                EnumVariant {
                    name: "MUL13",
                    description: Some("PLL input clock x 13."),
                    value: 11,
                },
                EnumVariant {
                    name: "MUL14",
                    description: Some("PLL input clock x 14."),
                    value: 12,
                },
                EnumVariant {
                    name: "MUL15",
                    description: Some("PLL input clock x 15."),
                    value: 13,
                },
                EnumVariant {
                    name: "MUL16",
                    description: Some("PLL input clock x 16."),
                    value: 14,
                },
                EnumVariant {
                    name: "MUL6_5",
                    description: Some("PLL input clock x 6.5."),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Ppre",
            description: Some("APB Low speed prescaler (APB1)."),
            bit_size: 3,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("HCLK not divided."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("HCLK divided by 2."),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("HCLK divided by 4."),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("HCLK divided by 8."),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("HCLK divided by 16."),
                    value: 7,
                },
            ],
        },
        Enum {
            name: "Prediv",
            description: Some("PREDIV1 division factor."),
            bit_size: 4,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("PREDIV1 input clock not divided."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("PREDIV1 input clock divided by 2."),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some("PREDIV1 input clock divided by 3."),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV4",
                    description: Some("PREDIV1 input clock divided by 4."),
                    value: 3,
                },
                EnumVariant {
                    name: "DIV5",
                    description: Some("PREDIV1 input clock divided by 5."),
                    value: 4,
                },
                EnumVariant {
                    name: "DIV6",
                    description: Some("PREDIV1 input clock divided by 6."),
                    value: 5,
                },
                EnumVariant {
                    name: "DIV7",
                    description: Some("PREDIV1 input clock divided by 7."),
                    value: 6,
                },
                EnumVariant {
                    name: "DIV8",
                    description: Some("PREDIV1 input clock divided by 8."),
                    value: 7,
                },
                EnumVariant {
                    name: "DIV9",
                    description: Some("PREDIV1 input clock divided by 9."),
                    value: 8,
                },
                EnumVariant {
                    name: "DIV10",
                    description: Some("PREDIV1 input clock divided by 10."),
                    value: 9,
                },
                EnumVariant {
                    name: "DIV11",
                    description: Some("PREDIV1 input clock divided by 11."),
                    value: 10,
                },
                EnumVariant {
                    name: "DIV12",
                    description: Some("PREDIV1 input clock divided by 12."),
                    value: 11,
                },
                EnumVariant {
                    name: "DIV13",
                    description: Some("PREDIV1 input clock divided by 13."),
                    value: 12,
                },
                EnumVariant {
                    name: "DIV14",
                    description: Some("PREDIV1 input clock divided by 14."),
                    value: 13,
                },
                EnumVariant {
                    name: "DIV15",
                    description: Some("PREDIV1 input clock divided by 15."),
                    value: 14,
                },
                EnumVariant {
                    name: "DIV16",
                    description: Some("PREDIV1 input clock divided by 16."),
                    value: 15,
                },
            ],
        },
        Enum {
            name: "Rtcsel",
            description: Some("RTC clock source selection."),
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "NO_CLK",
                    description: Some("No clock."),
                    value: 0,
                },
                EnumVariant {
                    name: "LSE",
                    description: Some("LSE oscillator clock used as RTC clock."),
                    value: 1,
                },
                EnumVariant {
                    name: "LSI",
                    description: Some("LSI oscillator clock used as RTC clock."),
                    value: 2,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE oscillator clock divided by 128 used as RTC clock."),
                    value: 3,
                },
            ],
        },
        Enum {
            name: "Sw",
            description: Some("System clock Switch."),
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "HSI",
                    description: Some("HSI selected as system clock."),
                    value: 0,
                },
                EnumVariant {
                    name: "HSE",
                    description: Some("HSE selected as system clock."),
                    value: 1,
                },
                EnumVariant {
                    name: "PLL",
                    description: Some("PLL selected as system clock."),
                    value: 2,
                },
            ],
        },
        Enum {
            name: "Usbpre",
            description: Some("USB prescaler."),
            bit_size: 2,
            variants: &[
                EnumVariant {
                    name: "DIV1",
                    description: Some("PLL clock divided by 1(PLLCLK=48MHz)."),
                    value: 0,
                },
                EnumVariant {
                    name: "DIV2",
                    description: Some("PLL clock divided by 2(PLLCLK=96MHz)."),
                    value: 1,
                },
                EnumVariant {
                    name: "DIV3",
                    description: Some("PLL clock divided by 3(PLLCLK=144MHz)."),
                    value: 2,
                },
                EnumVariant {
                    name: "DIV5",
                    description: Some("PLL clock divided by 5(PLLCLK=240MHz)."),
                    value: 3,
                },
            ],
        },
    ],
};
